daemon off;
worker_processes auto;
pid /var/lib/hypothesis/nginx.pid;
error_log /dev/stderr;

# This file handle limit should ideally be at least the number of worker
# connections * 2. But it can't exceed the "hard" limit applied
# by the OS. See here for the settings applied by our deployments:
# https://github.com/hypothesis/deployment/blob/master/h-websocket/ebextensions/prod/docker_nofile.config
worker_rlimit_nofile 8192;

events {
  # Worker connections can exceed those of the upstream NGINX, but it won't do
  # us much good as the upstream AWS NGINX will reject connections before they
  # get to us:
  # https://github.com/hypothesis/deployment/blob/master/h-websocket/platform/prod/nginx/nginx.conf
  worker_connections 8192;
}

http {
  client_max_body_size 20m;
  sendfile on;
  server_tokens off;

  include mime.types;
  default_type application/octet-stream;

  access_log off;


  # We set fail_timeout=0 so that the upstream isn't marked as down if a single
  # request fails (e.g. if gunicorn kills a worker for taking too long to handle
  # a single request).
  upstream websocket { server unix:/tmp/gunicorn-websocket.sock fail_timeout=0; }

  server {
    listen 5000;

    server_name _;
    server_tokens off;

    location / {
      proxy_pass http://websocket;
      proxy_http_version 1.1;
      proxy_redirect off;
      proxy_buffering off;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection upgrade;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Server $http_host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
  }

  server {
    listen 127.0.0.234:5000;
    server_name _;

    location /status {
      stub_status on;
      access_log off;
      allow 127.0.0.0/24;
      deny all;
    }
  }
}
