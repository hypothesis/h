# -*- coding: utf-8 -*-
from __future__ import print_function

import sys

from setuptools import setup, find_packages
from setuptools.command.sdist import sdist as _sdist
from setuptools.command.test import test as TestCommand


class PyTest(TestCommand):
    user_options = [
        ('cov', None, 'measure coverage')
    ]

    def initialize_options(self):
        TestCommand.initialize_options(self)
        self.cov = None

    def finalize_options(self):
        TestCommand.finalize_options(self)
        self.test_args = ['h']
        self.test_suite = True
        if self.cov:
            self.test_args += ['--cov', 'h',
                               '--cov-config', '.coveragerc']

    def run_tests(self):
        import pytest
        errno = pytest.main(self.test_args)
        sys.exit(errno)


VERSION = __import__('h').__version__
VERSION_TPL = """
# This version file is autogenerated from Git data.
def get_version():
    return '{version}'
"""


def update_version():
    with open('h/_version.py', 'w') as fp:
        fp.write(VERSION_TPL.format(version=VERSION))

    print('updated h/_version.py with version {}'.format(VERSION))


class sdist(_sdist):
    def run(self):
        update_version()
        return _sdist.run(self)


INSTALL_REQUIRES = [
    'PyJWT>=1.0.0,<2.0.0',
    'SQLAlchemy>=0.8.0',
    'alembic>=0.7.0',
    'annotator>=0.14.2,<0.15',
    'blinker>=1.3,<1.4',
    'cryptacular>=1.4,<1.5',
    'cryptography>=0.7',
    'deform>=0.9,<1.0',
    'deform-jinja2>=0.5,<0.6',
    'elasticsearch>=1.1.0,<2.0.0',
    'gevent>=1.0.2,<1.1.0',
    'gnsq>=0.3.0,<0.4.0',
    'gunicorn>=19.2,<20',
    'itsdangerous>=0.24',
    'jsonpointer==1.0',
    'jsonschema>=2.5.1,<2.6',
    'pyramid>=1.5,<1.6',
    'psycogreen>=1.0',
    'psycopg2>=2.6.1',
    'pyramid_mailer>=0.13',
    'pyramid_tm>=0.7',
    'python-dateutil>=2.1',
    'python-slugify>=1.1.3,<1.2.0',
    'python-statsd>=1.7.0,<1.8.0',
    'webassets>=0.10,<0.11',
    'pyramid_webassets>=0.9,<1.0',
    'pyramid-jinja2>=2.3.3',
    'raven>=5.10.2,<5.11.0',
    'requests>=2.7.0',
    'unicodecsv>=0.14.1,<0.15',
    'ws4py>=0.3,<0.4',
    'zope.sqlalchemy>=0.7.6,<0.8.0',

    # Version pin for known bug
    # https://github.com/repoze/repoze.sendmail/issues/31
    'repoze.sendmail<4.2',
]

DEV_EXTRAS = ['pyramid_debugtoolbar>=2.1', 'prospector[with_pyroma]', 'pep257',
              'sphinxcontrib-httpdomain']
TESTING_EXTRAS = ['mock>=1.3.0', 'pytest>=2.5', 'pytest-cov', 'factory-boy']
YAML_EXTRAS = ['PyYAML']

setup(
    name='h',
    version=VERSION,
    description='The Internet. Peer-reviewed.',
    long_description=open('README.rst', 'rt').read(),
    classifiers=[
        'Development Status :: 3 - Alpha',
        'Environment :: Console',
        'Intended Audience :: Developers',
        'License :: OSI Approved :: BSD License',
        'Operating System :: OS Independent',
        'Programming Language :: Python'
    ],
    keywords='annotation web javascript',
    author='Hypothes.is Project & contributors',
    author_email='contact@hypothes.is',
    url='https://docs.hypothes.is',
    license='Simplified (2-Clause) BSD License',
    packages=find_packages(exclude=['*.test']),
    include_package_data=True,
    zip_safe=False,
    install_requires=INSTALL_REQUIRES,
    extras_require={
        'dev': DEV_EXTRAS + YAML_EXTRAS,
        'testing': TESTING_EXTRAS,
        'YAML': YAML_EXTRAS,
    },
    tests_require=DEV_EXTRAS + TESTING_EXTRAS,
    cmdclass={'test': PyTest, 'sdist': sdist},
    entry_points={
        'paste.app_factory': [
            'main=h.app:create_app',
            'websocket=h.websocket:create_app',
        ],
        'console_scripts': [
            'hypothesis=h.script:main',
            'hypothesis-buildext=h.buildext:main',
            'hypothesis-worker=h.worker:main',
        ],
        'h.worker': [
            'mailer=h.mailer:worker',
            'nipsa=h.api.nipsa.worker:worker',
            'notification=h.notification.worker:run',
        ],
        'h.annotool': [
            'prepare=h.api.transform:prepare',
        ]
    },
)
