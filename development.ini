[DEFAULT]
# ElasticSearch instance for document storage
# This is a URL of an ElasticSearch server.
es: http://dokku.hypothes.is:9200

# SQL provider URL for relational storage
# This is a sqlalchemy engine string -- see sqlalchemy documentation
sql: sqlite:///h.db


[app:main]
use: egg:h

#
# Annotator storage API configuration
#
# Set `api.endpoint`, `api.url` or both. With `api.endpoint` as a path,
# configures an embedded annotator-store on that path. With `api.url`,
# urls can be generated with an alternate domain, without `api.endpoint`,
# the URL can be used as a remote API when delegating storage.
#
# If you embed the api with `api.endpoint` and wish to proxy to the same
# instance on a different domain using `api.url`, tell pyramid that the
# api has a virtual root by ensuring the `X-Vhm-Root` HTTP header is
# passed with the value `/@@api_virtual`.
#
# Note: Delagating storage, using `api.url` without `api.endpoint` is not
# currently supported.
api.endpoint: /api
api.key: 00000000-0000-0000-0000-000000000000
# api.secret: 00000000-0000-0000-0000-000000000000
# api.url: http://api.example.com


#
# Authentication configuration -- see horus documentation
#
horus.allow_email_auth: True
horus.autologin: True
horus.require_activation: False

horus.login_redirect: /
horus.logout_redirect: /


#
# Mail server configuration -- see the pyramid_mailer documentation
#
mail.host: mailtrap.io
mail.port: 2525
mail.username: dokku-68ed9f5151d0c663
mail.password: c2b1ad62b780b96d

#
# Session settings --  see the beaker documentation
#
# Change this secret for production. Keep it safe. THe application uses this
# secret to verify the authenticity of user sessions.
session.secret: 535510n_53cr37

# When running with more than one worker something other than the memory-
# backed sessions is needed so that workers recognize the sessions set by
# other workers. For instance, file-backed sessions will work for a single
# server. For scaling out to multiple servers, redis-backed sessions should
# work.
#session.type: file
#session.data_dir: %(here)s/data/sessions/data
#session.lock_dir: %(here)s/data/sessions/lock


#
# Additional pyramid includes
#
pyramid.includes:
   deform_bootstrap
   pyramid_deform
   pyramid_mailer

pyramid.reload_templates: True

#
# Path to form templates. These are being phased out.
#
pyramid_deform.template_search_path: h:templates/deform


#
# Database configuration taken from [DEFAULTS]
#
es.host: %(es)s
es.index: annotator
sqlalchemy.url: %(sql)s


#
# Static asset configuration -- see webassets documentation
#
webassets.base_dir: %(here)s/h
webassets.base_url: /assets
webassets.coffee_no_bare: True

# Uncomment these two lines below to turn on production minification.
# Running without webassets.debug requires clean-css and uglify-js.
webassets.debug: True
webassets.manifest: False


[server:main]
use: egg:h
host: 0.0.0.0
port: 5000
# Uncomment this line to test SSL deployment with a dummy certificate.
#certfile: %(here)s/host.pem
worker_class: gevent


###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[loggers]
keys = root, gunicorn.error, h, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_gunicorn.error]
level = INFO
handlers =
qualname = gunicorn.error
propagate = 0

[logger_h]
level = DEBUG
handlers = console
qualname = h
propagate = 0

[logger_sqlalchemy]
level = INFO
handlers =
qualname = sqlalchemy.engine

[handler_console]
class = StreamHandler
args = (sys.stderr,)
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s] %(message)s
