[app:main]
use: call:h.streamer:create_app

# Elasticsearch configuration. The WebSocket does not actually use ES but
# it does use the same config loading code which checks for these settings.
es.url: http://localhost:9200

secret_key: notverysecretafterall

# SQLAlchemy configuration -- See SQLAlchemy documentation
sqlalchemy.url: postgresql://postgres@localhost/postgres

[server:main]
use: egg:gunicorn#main
host: localhost
port: 5001
worker_class: h.streamer.Worker
graceful_timeout: 0
proc_name: websocket
# This is very low so you can see what happens when we run out
workers: 2
worker_connections: 8

[loggers]
keys = root, gunicorn.error, h

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARNING
handlers = console

[logger_gunicorn.error]
level = INFO
handlers =
qualname = gunicorn.error

[logger_h]
level = INFO
handlers =
qualname = h

[handler_console]
level = NOTSET
class = StreamHandler
args = ()
formatter = generic

[formatter_generic]
format = %(asctime)s [%(process)d] [%(name)s:%(levelname)s] %(message)s
